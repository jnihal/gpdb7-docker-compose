# Docker Compose file for GPDB 7X multinode cluster

version: '3.8'

# The containers
services:
# ==================================================
# The production cluster
# ==================================================
  cdw:
    image: gpdb7-multinode-cluster/gpdb-image
    restart: always
    hostname: cdw
    tty: true
    networks:
      - the-network
    volumes:
      - gpdb-src-volume:/gpdb-src
      - gpdb-scripts-volume:/gpdb-scripts
      - gpdb-rpm-volume:/gpdb-rpm

  sdw1:
    hostname: sdw1
    image: gpdb7-multinode-cluster/gpdb-image
    restart: always
    tty: true
    networks:
      - the-network
    volumes:
      - gpdb-src-volume:/gpdb-src
      - gpdb-scripts-volume:/gpdb-scripts
      - gpdb-rpm-volume:/gpdb-rpm

  sdw2:
    hostname: sdw2
    image: gpdb7-multinode-cluster/gpdb-image
    restart: always
    tty: true
    networks:
      - the-network
    volumes:
      - gpdb-src-volume:/gpdb-src
      - gpdb-scripts-volume:/gpdb-scripts
      - gpdb-rpm-volume:/gpdb-rpm

  sdw3:
    hostname: sdw3
    image: gpdb7-multinode-cluster/gpdb-image
    restart: always
    tty: true
    networks:
      - the-network
    volumes:
      - gpdb-src-volume:/gpdb-src
      - gpdb-scripts-volume:/gpdb-scripts
      - gpdb-rpm-volume:/gpdb-rpm

# The network that bridges all the containers
networks:
  the-network:

# The mounted volumes
volumes:
  gpdb-src-volume:
    driver_opts:
      o: bind
      type: none
      device: ${GPDB7_SRC}

  gpdb-scripts-volume:
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/scripts
  
  gpdb-rpm-volume:
    driver_opts:
      o: bind
      type: none
      device: ${GPDB_RPM}